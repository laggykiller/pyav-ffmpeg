name: build-ffmpeg
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
            shell: bash
            cibw_build: cp38-*
            python_version: 3.8
          - os: macos-latest
            arch: x86_64
            shell: bash
            cibw_build: cp38-*
            python_version: 3.8
          - os: ubuntu-latest
            arch: i686
            shell: bash
            cibw_build: cp38-*
            python_version: 3.8
          - os: ubuntu-latest
            arch: x86_64
            shell: bash
            cibw_build: cp38-*
            python_version: 3.8
          - os: windows-latest
            arch: AMD64
            shell: 'msys2 {0}'
            cibw_build: cp38-*
            python_version: 3.8
          - os: windows-latest
            arch: ARM64
            shell: 'msys2 {0}'
            cibw_build: cp39-*
            python_version: 3.9
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install packages
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config
          brew unlink gettext libidn2 libpng libtiff libunistring little-cms2 unbound
      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          install: base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-gperf mingw-w64-x86_64-nasm
          path-type: inherit
      - name: Setup msys2 for arm64
        if: matrix.os == 'windows-latest' && matrix.arch == 'ARM64'
        run: |
          echo '[woarm64]' >> /etc/pacman.conf
          echo 'Server = https://windows-on-arm-experiments.github.io/msys2-woarm64-build/$arch' >> /etc/pacman.conf
          echo 'SigLevel = Optional' >> /etc/pacman.conf
          pacman -Sy
          pacman --noconfirm -S \
            woarm64/mingw-w64-cross-binutils \
            woarm64/mingw-w64-cross-crt \
            woarm64/mingw-w64-cross-gcc \
            woarm64/mingw-w64-cross-headers \
            woarm64/mingw-w64-cross-windows-default-manifest \
            woarm64/mingw-w64-cross-winpthreads
          
          # Install packages for those that failed to compile
          pacman --noconfirm -Sw mingw-w64-clang-aarch64-ffmpeg
          
          mkdir -p /c/cibw

          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-SDL2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-aom*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-brotli*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-cairo*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-dav1d*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-fontconfig*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-freetype*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-frei0r-plugins*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-fribidi*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-gdk-pixbuf2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-giflib*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-glib2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-glslang*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-gmp*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-gnutls*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-graphite2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-gsm*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-harfbuzz*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-jbigkit*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-lame*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-lcms2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-lerc*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libass*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libbluray*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libcaca*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libdatrie*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libdeflate*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libdovi*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libexif*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libgme*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libidn2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libjpeg-turbo*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libmodplug*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libmysofa*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libogg*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libplacebo*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libpng*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-librsvg*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libsoxr*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libssh*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libtasn1*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libthai*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libtheora*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libtiff*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libunibreak*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libunistring*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libva*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libvorbis*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libvpl*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libvpx*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libwebp*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-libx264*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-lzo2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-nettle*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-openal*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-opencore-amr*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-openjpeg2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-opus*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-p11-kit*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-pango*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-pcre2*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-pixman*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-rav1e*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-rtmpdump*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-shaderc*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-speex*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-speexdsp*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-spirv-cross*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-spirv-tools*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-srt*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-svt-av1*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-vid.stab*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-vulkan-headers*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-vulkan-loader*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-wineditline*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-x265*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-xvidcore*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-zimg*.pkg.tar.zst -C /c/cibw/
          tar -xf /var/cache/pacman/pkg/mingw-w64-clang-aarch64-ffmpeg*.pkg.tar.zst -C /c/cibw/

          mv /c/cibw/clangarm64 /c/cibw/vendor
          mkdir -p /c/cibw/vendor/var/lib/cibuildpkg
          
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/xml2
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/iconv
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/fontconfig
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/fribidi
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/harfbuzz
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/glib
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/graphite
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/pcre
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/bluray
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/dav1d
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/vpx
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/x265

          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/xz
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/zlib
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/bz2
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/gmp
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/png
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/freetype
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/aom
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/ass
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/lame
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/ogg
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/opencore-amr
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/openjpeg
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/opus
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/speex
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/twolame
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/vorbis
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/x264
          echo installed > /c/cibw/vendor/var/lib/cibuildpkg/xvid
      - name: Build FFmpeg
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_BUILD: python scripts/build-ffmpeg.py /tmp/vendor
          CIBW_BEFORE_BUILD_WINDOWS: python scripts\build-ffmpeg.py C:\cibw\vendor
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: LD_LIBRARY_PATH=/tmp/vendor/lib:$LD_LIBRARY_PATH auditwheel repair -w {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:\cibw\vendor\bin -w {dest_dir} {wheel}
          CIBW_SKIP: "*musllinux*"
          CIBW_TEST_COMMAND: python -c "import dummy"
        run: |
          pip install cibuildwheel delvewheel
          cibuildwheel --output-dir output
          rm -f output/*.whl
      - name: Upload FFmpeg
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output/

  build-qemu-stage-1:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, ppc64le]
    env:
      stage: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build FFmpeg dependencies
        run: |
          docker run -v $PWD:/project:rw --workdir=/project quay.io/pypa/manylinux2014_${{ matrix.arch }} bash -exc '
            export PATH=/opt/python/cp38-cp38/bin:$PATH;
            export CIBUILDWHEEL=1;
            python scripts/build-ffmpeg.py /tmp/vendor --stage ${{ env.stage }};
            cp -ar /tmp/vendor /project;
          '
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.arch }}
          path: vendor

  build-qemu-stage-2:
    needs: build-qemu-stage-1
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, ppc64le]
    env:
      stage: 2
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - uses: actions/download-artifact@v3
        with:
          name: artifacts-${{ matrix.arch }}
          path: vendor
      - name: Build FFmpeg dependencies
        run: |
          docker run -v $PWD:/project:rw --workdir=/project quay.io/pypa/manylinux2014_${{ matrix.arch }} bash -exc '
            export PATH=/opt/python/cp38-cp38/bin:$PATH;
            export CIBUILDWHEEL=1;
            cp -ar vendor /tmp;
            python scripts/build-ffmpeg.py /tmp/vendor --stage ${{ env.stage }};
            cp -ar /tmp/vendor /project;
          '
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.arch }}
          path: vendor

  build-qemu-stage-3:
    needs: build-qemu-stage-2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, ppc64le]
    env:
      stage: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - uses: actions/download-artifact@v3
        with:
          name: artifacts-${{ matrix.arch }}
          path: vendor
      - name: Build FFmpeg
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_ALL_LINUX: cp -ar vendor /tmp
          CIBW_BEFORE_BUILD: python scripts/build-ffmpeg.py /tmp/vendor --stage ${{ env.stage }}
          CIBW_BUILD: cp38-*
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: LD_LIBRARY_PATH=/tmp/vendor/lib:$LD_LIBRARY_PATH auditwheel repair -w {dest_dir} {wheel}
          CIBW_SKIP: "*musllinux*"
          CIBW_TEST_COMMAND: python -c "import dummy"
        run: |
          pip install cibuildwheel
          cibuildwheel --output-dir output
          rm -f output/*.whl
        shell: bash
      - name: Upload FFmpeg
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output/
